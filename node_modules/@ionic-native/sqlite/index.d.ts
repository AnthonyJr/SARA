/**
 * @hidden
 */
export declare class SQLiteObject {
    private _objectInstance;
    constructor(_objectInstance: any);
    databaseFeatures: any;
    addTransaction(transaction: any): void;
    /**
     * @param fn {any}
     * @returns {Promise<any>}
     */
    transaction(fn: any): Promise<any>;
    /**
     * @param fn {any}
     * @returns {Promise<any>}
     */
    readTransaction(fn: any): Promise<any>;
    startNextTransaction(): void;
    /**
     * @returns {Promise<any>}
     */
    close(): Promise<any>;
    start(): void;
    /**
     * Execute SQL on the opened database. Note, you must call `openDatabase` first, and
     * ensure it resolved and successfully opened the database.
     */
    executeSql(statement: string, params: any): Promise<any>;
    /**
     * @param sql
     * @param values
     * @returns {Promise<any>}
     */
    addStatement(sql: any, values: any): Promise<any>;
    /**
     * @param sqlStatements {any}
     * @returns {Promise<any>}
     */
    sqlBatch(sqlStatements: any): Promise<any>;
    abortallPendingTransactions(): void;
    /**
     @param handler
     @param response
     */
    handleStatementSuccess(handler: any, response: any): void;
    /**
     * @param handler
     * @param response
     */
    handleStatementFailure(handler: any, response: any): void;
    run(): void;
    /**
     * @param txFailure
     */
    abort(txFailure: any): void;
    finish(): void;
    /**
     * @param sqlerror
     */
    abortFromQ(sqlerror: any): void;
    /**
     * @returns {Promise<any>}
     */
    echoTest(): Promise<any>;
    /**
     * @param first
     * @returns {Promise<any>}
     */
    deleteDatabase(first: any): Promise<any>;
}
/**
 * @name SQLite
 *
 * @description
 * Access SQLite databases on the device.
 *
 * @usage
 *
 * ```typescript
 * import { SQLite, SQLiteObject } from '@ionic-native/sqlite';
 *
 * constructor(private sqlite: SQLite) { }
 *
 * ...
 *
 * this.sqlite.create({
 *   name: 'data.db',
 *   location: 'default'
 * })
 *   .then((db: SQLiteObject) => {
 *
 *
 *     db.executeSql('create table danceMoves(name VARCHAR(32))', {})
 *       .then(() => console.log('Executed SQL'))
 *       .catch(e => console.log(e));
 *
 *
 *   })
 *   .catch(e => console.log(e));
 *
 * ```
 *
 * @classes
 * SQLiteObject
 */
export declare class SQLite {
    /**
     * Open or create a SQLite database file.
     *
     * See the plugin docs for an explanation of all options: https://github.com/litehelpers/Cordova-sqlite-storage#opening-a-database
     *
     * @param config the config for opening the database.
     * @return Promise<SQLiteObject>
     */
    create(config: any): Promise<SQLiteObject>;
}
